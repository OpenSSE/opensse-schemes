language: cpp

os: linux
dist: xenial
sudo: required

cache:
  directories:
    - $HOME/deps

addons:
  apt:
    sources: &basic_sources
      - ubuntu-toolchain-r-test
      - sourceline: "deb https://apt.llvm.org/trusty/ llvm-toolchain-trusty main"
      - sourceline: "deb https://apt.llvm.org/trusty/ llvm-toolchain-trusty-5.0 main"
        key_url: "https://llvm.org/apt/llvm-snapshot.gpg.key"
    packages: &basic_deps
      - libssl-dev
      - yasm
      - libgmp-dev
      - libgflags-dev
      - libsnappy-dev
      - zlib1g-dev
      - libbz2-dev
      - autoconf
      - libtool
      - lcov
env:
  global:
    - ENABLE_COVERAGE=Off
    - BUILD_TYPE=Debug

# matrix:
#    include:
#     - env:
#         - STATIC_ANALYSIS=false
#         - RUN_CHECKS=true
#         - COMPILER=gcc
#         - ENABLE_COVERAGE=On
#       after_success:
#         - ./ci/gen_coverage.sh # get the code coverage
#         - ./ci/upload_report.sh # upload the report to coveralls

before_install:
  - INSTALL_DIR=$HOME/deps
  - CPATH=$CPATH:$INSTALL_DIR/include
  - LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$INSTALL_DIR/lib
  - PATH=$PATH:$INSTALL_DIR/bin
  - echo $CPATH
  - echo $LD_LIBRARY_PATH
  - echo $PATH

install:
  - ./ci/install_crypto_tk_deps.sh
  - ./ci/install_grpc.sh
  - ./ci/install_rocksdb.sh
  - gem install coveralls-lcov

matrix:
  include:
    - env:
        - STATIC_ANALYSIS=false
        - RUN_CHECKS=true
        - COMPILER=gcc
        - ENABLE_COVERAGE=On
      compiler: gcc
      addons:
        apt:
          sources: *basic_sources
          packages:
            - *basic_deps
      after_success:
        - ./ci/gen_coverage.sh # get the code coverage
        - ./ci/upload_report.sh # upload the report to coveralls

    - env:
        - STATIC_ANALYSIS=true
        - RUN_CHECKS=false
        - CLANG_TIDY=clang-tidy-5.0
      addons:
        apt:
          sources: *basic_sources
          packages:
            - *basic_deps
            - cppcheck
            - libclang-common-5.0-dev # to get the headers right
            - clang-tidy-5.0
      script:
        - ./scripts/cppcheck.sh
        - ./scripts/tidy.sh

    - env:
        - STATIC_ANALYSIS=false
        - RUN_CHECKS=false
        - CLANG_FORMAT=clang-format-5.0
      addons:
        apt:
          sources: *basic_sources
          packages:
            - clang-format-5.0
      install: # do not compile the dependencies
      script:
        - ./scripts/check_format.sh

script:
  - ./ci/build.sh
  - if [ "${RUN_CHECKS}" == "true" ]; then (cd build && ./test/check); fi
